// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ContractUpgrade extends ethereum.Event {
  get params(): ContractUpgrade__Params {
    return new ContractUpgrade__Params(this);
  }
}

export class ContractUpgrade__Params {
  _event: ContractUpgrade;

  constructor(event: ContractUpgrade) {
    this._event = event;
  }

  get newContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AssetUpdated extends ethereum.Event {
  get params(): AssetUpdated__Params {
    return new AssetUpdated__Params(this);
  }
}

export class AssetUpdated__Params {
  _event: AssetUpdated;

  constructor(event: AssetUpdated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Created extends ethereum.Event {
  get params(): Created__Params {
    return new Created__Params(this);
  }
}

export class Created__Params {
  _event: Created;

  constructor(event: Created) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Contract__getCollectibleDetailsResult {
  value0: BigInt;
  value1: BigInt;
  value2: i32;
  value3: i32;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: i32,
    value3: i32,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    return map;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  supportsInterface(_interfaceID: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceID)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceID: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  implementsERC721(): boolean {
    let result = super.call(
      "implementsERC721",
      "implementsERC721():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_implementsERC721(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "implementsERC721",
      "implementsERC721():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createETHCardCollectible(
    _teamId: i32,
    _posId: i32,
    _attributes: BigInt,
    _owner: Address,
    _gameId: BigInt,
    _playerOverrideId: BigInt,
    _mlbPlayerId: BigInt
  ): BigInt {
    let result = super.call(
      "createETHCardCollectible",
      "createETHCardCollectible(uint8,uint8,uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_teamId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_posId)),
        ethereum.Value.fromUnsignedBigInt(_attributes),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_gameId),
        ethereum.Value.fromUnsignedBigInt(_playerOverrideId),
        ethereum.Value.fromUnsignedBigInt(_mlbPlayerId)
      ]
    );

    return result[0].toBigInt();
  }

  try_createETHCardCollectible(
    _teamId: i32,
    _posId: i32,
    _attributes: BigInt,
    _owner: Address,
    _gameId: BigInt,
    _playerOverrideId: BigInt,
    _mlbPlayerId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createETHCardCollectible",
      "createETHCardCollectible(uint8,uint8,uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_teamId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_posId)),
        ethereum.Value.fromUnsignedBigInt(_attributes),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_gameId),
        ethereum.Value.fromUnsignedBigInt(_playerOverrideId),
        ethereum.Value.fromUnsignedBigInt(_mlbPlayerId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  detachmentTime(): BigInt {
    let result = super.call("detachmentTime", "detachmentTime():(uint32)", []);

    return result[0].toBigInt();
  }

  try_detachmentTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "detachmentTime",
      "detachmentTime():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  promoCreatedCount(param0: BigInt): BigInt {
    let result = super.call(
      "promoCreatedCount",
      "promoCreatedCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_promoCreatedCount(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "promoCreatedCount",
      "promoCreatedCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  generationSeasonDict(param0: BigInt): BigInt {
    let result = super.call(
      "generationSeasonDict",
      "generationSeasonDict(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_generationSeasonDict(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "generationSeasonDict",
      "generationSeasonDict(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  otherManagers(param0: Address): i32 {
    let result = super.call("otherManagers", "otherManagers(address):(uint8)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toI32();
  }

  try_otherManagers(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "otherManagers",
      "otherManagers(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  tokenOfOwnerByIndex(_owner: Address, _index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    _owner: Address,
    _index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createRewardCollectible(
    _teamId: i32,
    _posId: i32,
    _attributes: BigInt,
    _owner: Address,
    _gameId: BigInt,
    _playerOverrideId: BigInt,
    _mlbPlayerId: BigInt
  ): BigInt {
    let result = super.call(
      "createRewardCollectible",
      "createRewardCollectible(uint8,uint8,uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_teamId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_posId)),
        ethereum.Value.fromUnsignedBigInt(_attributes),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_gameId),
        ethereum.Value.fromUnsignedBigInt(_playerOverrideId),
        ethereum.Value.fromUnsignedBigInt(_mlbPlayerId)
      ]
    );

    return result[0].toBigInt();
  }

  try_createRewardCollectible(
    _teamId: i32,
    _posId: i32,
    _attributes: BigInt,
    _owner: Address,
    _gameId: BigInt,
    _playerOverrideId: BigInt,
    _mlbPlayerId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createRewardCollectible",
      "createRewardCollectible(uint8,uint8,uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_teamId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_posId)),
        ethereum.Value.fromUnsignedBigInt(_attributes),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_gameId),
        ethereum.Value.fromUnsignedBigInt(_playerOverrideId),
        ethereum.Value.fromUnsignedBigInt(_mlbPlayerId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MLB_Legal(): string {
    let result = super.call("MLB_Legal", "MLB_Legal():(string)", []);

    return result[0].toString();
  }

  try_MLB_Legal(): ethereum.CallResult<string> {
    let result = super.tryCall("MLB_Legal", "MLB_Legal():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nftTeamIndexToCollectibleCount(param0: BigInt): BigInt {
    let result = super.call(
      "nftTeamIndexToCollectibleCount",
      "nftTeamIndexToCollectibleCount(uint256):(uint32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_nftTeamIndexToCollectibleCount(
    param0: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nftTeamIndexToCollectibleCount",
      "nftTeamIndexToCollectibleCount(uint256):(uint32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  contractsApprovedList(param0: Address): boolean {
    let result = super.call(
      "contractsApprovedList",
      "contractsApprovedList(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_contractsApprovedList(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "contractsApprovedList",
      "contractsApprovedList(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  exists(_tokenId: BigInt): boolean {
    let result = super.call("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBoolean();
  }

  try_exists(_tokenId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenByIndex(_index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(_index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createSeedCollectible(
    _teamId: i32,
    _posId: i32,
    _attributes: BigInt,
    _owner: Address,
    _gameId: BigInt,
    _playerOverrideId: BigInt,
    _mlbPlayerId: BigInt
  ): BigInt {
    let result = super.call(
      "createSeedCollectible",
      "createSeedCollectible(uint8,uint8,uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_teamId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_posId)),
        ethereum.Value.fromUnsignedBigInt(_attributes),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_gameId),
        ethereum.Value.fromUnsignedBigInt(_playerOverrideId),
        ethereum.Value.fromUnsignedBigInt(_mlbPlayerId)
      ]
    );

    return result[0].toBigInt();
  }

  try_createSeedCollectible(
    _teamId: i32,
    _posId: i32,
    _attributes: BigInt,
    _owner: Address,
    _gameId: BigInt,
    _playerOverrideId: BigInt,
    _mlbPlayerId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createSeedCollectible",
      "createSeedCollectible(uint8,uint8,uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_teamId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_posId)),
        ethereum.Value.fromUnsignedBigInt(_attributes),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_gameId),
        ethereum.Value.fromUnsignedBigInt(_playerOverrideId),
        ethereum.Value.fromUnsignedBigInt(_mlbPlayerId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkIsAttached(_tokenId: BigInt): BigInt {
    let result = super.call(
      "checkIsAttached",
      "checkIsAttached(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_checkIsAttached(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "checkIsAttached",
      "checkIsAttached(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  InterfaceSignature_ERC721Optional(): Bytes {
    let result = super.call(
      "InterfaceSignature_ERC721Optional",
      "InterfaceSignature_ERC721Optional():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_InterfaceSignature_ERC721Optional(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "InterfaceSignature_ERC721Optional",
      "InterfaceSignature_ERC721Optional():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  attachedSystemActive(): boolean {
    let result = super.call(
      "attachedSystemActive",
      "attachedSystemActive():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_attachedSystemActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "attachedSystemActive",
      "attachedSystemActive():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getGameCardId(_tokenId: BigInt): BigInt {
    let result = super.call(
      "getGameCardId",
      "getGameCardId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getGameCardId(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGameCardId",
      "getGameCardId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isLSNFT(): boolean {
    let result = super.call("isLSNFT", "isLSNFT():(bool)", []);

    return result[0].toBoolean();
  }

  try_isLSNFT(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLSNFT", "isLSNFT():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  newContractAddress(): Address {
    let result = super.call(
      "newContractAddress",
      "newContractAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_newContractAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newContractAddress",
      "newContractAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollectibleDetails(
    _tokenId: BigInt
  ): Contract__getCollectibleDetailsResult {
    let result = super.call(
      "getCollectibleDetails",
      "getCollectibleDetails(uint256):(uint256,uint32,uint8,uint8,uint64,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new Contract__getCollectibleDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toBigInt()
    );
  }

  try_getCollectibleDetails(
    _tokenId: BigInt
  ): ethereum.CallResult<Contract__getCollectibleDetailsResult> {
    let result = super.tryCall(
      "getCollectibleDetails",
      "getCollectibleDetails(uint256):(uint256,uint32,uint8,uint8,uint64,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__getCollectibleDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toBigInt()
      )
    );
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rewardsRedeemed(): BigInt {
    let result = super.call(
      "rewardsRedeemed",
      "rewardsRedeemed():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_rewardsRedeemed(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rewardsRedeemed",
      "rewardsRedeemed():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTeamId(_tokenId: BigInt): BigInt {
    let result = super.call("getTeamId", "getTeamId(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBigInt();
  }

  try_getTeamId(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getTeamId", "getTeamId(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAbilitiesForCollectibleId(_tokenId: BigInt): BigInt {
    let result = super.call(
      "getAbilitiesForCollectibleId",
      "getAbilitiesForCollectibleId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getAbilitiesForCollectibleId(
    _tokenId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAbilitiesForCollectibleId",
      "getAbilitiesForCollectibleId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokensOfOwner(_owner: Address): Array<BigInt> {
    let result = super.call(
      "tokensOfOwner",
      "tokensOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toBigIntArray();
  }

  try_tokensOfOwner(_owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokensOfOwner",
      "tokensOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getPositionId(_tokenId: BigInt): BigInt {
    let result = super.call(
      "getPositionId",
      "getPositionId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getPositionId(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPositionId",
      "getPositionId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nftCollectibleAttachments(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "nftCollectibleAttachments",
      "nftCollectibleAttachments(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_nftCollectibleAttachments(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nftCollectibleAttachments",
      "nftCollectibleAttachments(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isBatchSupported(): boolean {
    let result = super.call(
      "isBatchSupported",
      "isBatchSupported():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isBatchSupported(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isBatchSupported",
      "isBatchSupported():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nftTeamIdToSequenceIdToCollectible(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "nftTeamIdToSequenceIdToCollectible",
      "nftTeamIdToSequenceIdToCollectible(uint256,uint32):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_nftTeamIdToSequenceIdToCollectible(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nftTeamIdToSequenceIdToCollectible",
      "nftTeamIdToSequenceIdToCollectible(uint256,uint32):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  managerPrimary(): Address {
    let result = super.call("managerPrimary", "managerPrimary():(address)", []);

    return result[0].toAddress();
  }

  try_managerPrimary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "managerPrimary",
      "managerPrimary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createPromoCollectible(
    _teamId: i32,
    _posId: i32,
    _attributes: BigInt,
    _owner: Address,
    _gameId: BigInt,
    _playerOverrideId: BigInt,
    _mlbPlayerId: BigInt
  ): BigInt {
    let result = super.call(
      "createPromoCollectible",
      "createPromoCollectible(uint8,uint8,uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_teamId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_posId)),
        ethereum.Value.fromUnsignedBigInt(_attributes),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_gameId),
        ethereum.Value.fromUnsignedBigInt(_playerOverrideId),
        ethereum.Value.fromUnsignedBigInt(_mlbPlayerId)
      ]
    );

    return result[0].toBigInt();
  }

  try_createPromoCollectible(
    _teamId: i32,
    _posId: i32,
    _attributes: BigInt,
    _owner: Address,
    _gameId: BigInt,
    _playerOverrideId: BigInt,
    _mlbPlayerId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createPromoCollectible",
      "createPromoCollectible(uint8,uint8,uint256,address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_teamId)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_posId)),
        ethereum.Value.fromUnsignedBigInt(_attributes),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_gameId),
        ethereum.Value.fromUnsignedBigInt(_playerOverrideId),
        ethereum.Value.fromUnsignedBigInt(_mlbPlayerId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  seedCreatedCount(): BigInt {
    let result = super.call(
      "seedCreatedCount",
      "seedCreatedCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_seedCreatedCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "seedCreatedCount",
      "seedCreatedCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  error(): boolean {
    let result = super.call("error", "error():(bool)", []);

    return result[0].toBoolean();
  }

  try_error(): ethereum.CallResult<boolean> {
    let result = super.tryCall("error", "error():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  generationSeasonController(param0: BigInt): BigInt {
    let result = super.call(
      "generationSeasonController",
      "generationSeasonController(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_generationSeasonController(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "generationSeasonController",
      "generationSeasonController(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  saleManagerAddress(): Address {
    let result = super.call(
      "saleManagerAddress",
      "saleManagerAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_saleManagerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "saleManagerAddress",
      "saleManagerAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAssetAttachment(_tokenId: BigInt): Array<BigInt> {
    let result = super.call(
      "getAssetAttachment",
      "getAssetAttachment(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigIntArray();
  }

  try_getAssetAttachment(_tokenId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAssetAttachment",
      "getAssetAttachment(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  bankManager(): Address {
    let result = super.call("bankManager", "bankManager():(address)", []);

    return result[0].toAddress();
  }

  try_bankManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("bankManager", "bankManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ERC721_RECEIVED(): Bytes {
    let result = super.call(
      "ERC721_RECEIVED",
      "ERC721_RECEIVED():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_ERC721_RECEIVED(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ERC721_RECEIVED",
      "ERC721_RECEIVED():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  managerSecondary(): Address {
    let result = super.call(
      "managerSecondary",
      "managerSecondary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_managerSecondary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "managerSecondary",
      "managerSecondary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPlayerId(_tokenId: BigInt): BigInt {
    let result = super.call("getPlayerId", "getPlayerId(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBigInt();
  }

  try_getPlayerId(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPlayerId",
      "getPlayerId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class MultiBatchSafeTransferFromCall extends ethereum.Call {
  get inputs(): MultiBatchSafeTransferFromCall__Inputs {
    return new MultiBatchSafeTransferFromCall__Inputs(this);
  }

  get outputs(): MultiBatchSafeTransferFromCall__Outputs {
    return new MultiBatchSafeTransferFromCall__Outputs(this);
  }
}

export class MultiBatchSafeTransferFromCall__Inputs {
  _call: MultiBatchSafeTransferFromCall;

  constructor(call: MultiBatchSafeTransferFromCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _fromB(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _toB(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class MultiBatchSafeTransferFromCall__Outputs {
  _call: MultiBatchSafeTransferFromCall;

  constructor(call: MultiBatchSafeTransferFromCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BatchCreateAssetCall extends ethereum.Call {
  get inputs(): BatchCreateAssetCall__Inputs {
    return new BatchCreateAssetCall__Inputs(this);
  }

  get outputs(): BatchCreateAssetCall__Outputs {
    return new BatchCreateAssetCall__Outputs(this);
  }
}

export class BatchCreateAssetCall__Inputs {
  _call: BatchCreateAssetCall;

  constructor(call: BatchCreateAssetCall) {
    this._call = call;
  }

  get _teamId(): Array<i32> {
    return this._call.inputValues[0].value.toI32Array();
  }

  get _attributes(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _playerOverrideId(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _mlbPlayerId(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _to(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }
}

export class BatchCreateAssetCall__Outputs {
  _call: BatchCreateAssetCall;

  constructor(call: BatchCreateAssetCall) {
    this._call = call;
  }
}

export class RequestDetachmentCall extends ethereum.Call {
  get inputs(): RequestDetachmentCall__Inputs {
    return new RequestDetachmentCall__Inputs(this);
  }

  get outputs(): RequestDetachmentCall__Outputs {
    return new RequestDetachmentCall__Outputs(this);
  }
}

export class RequestDetachmentCall__Inputs {
  _call: RequestDetachmentCall;

  constructor(call: RequestDetachmentCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestDetachmentCall__Outputs {
  _call: RequestDetachmentCall;

  constructor(call: RequestDetachmentCall) {
    this._call = call;
  }
}

export class CreateETHCardCollectibleCall extends ethereum.Call {
  get inputs(): CreateETHCardCollectibleCall__Inputs {
    return new CreateETHCardCollectibleCall__Inputs(this);
  }

  get outputs(): CreateETHCardCollectibleCall__Outputs {
    return new CreateETHCardCollectibleCall__Outputs(this);
  }
}

export class CreateETHCardCollectibleCall__Inputs {
  _call: CreateETHCardCollectibleCall;

  constructor(call: CreateETHCardCollectibleCall) {
    this._call = call;
  }

  get _teamId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _posId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _attributes(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _gameId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _playerOverrideId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _mlbPlayerId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateETHCardCollectibleCall__Outputs {
  _call: CreateETHCardCollectibleCall;

  constructor(call: CreateETHCardCollectibleCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BatchSetApprovalForAllCall extends ethereum.Call {
  get inputs(): BatchSetApprovalForAllCall__Inputs {
    return new BatchSetApprovalForAllCall__Inputs(this);
  }

  get outputs(): BatchSetApprovalForAllCall__Outputs {
    return new BatchSetApprovalForAllCall__Outputs(this);
  }
}

export class BatchSetApprovalForAllCall__Inputs {
  _call: BatchSetApprovalForAllCall;

  constructor(call: BatchSetApprovalForAllCall) {
    this._call = call;
  }

  get _spenders(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class BatchSetApprovalForAllCall__Outputs {
  _call: BatchSetApprovalForAllCall;

  constructor(call: BatchSetApprovalForAllCall) {
    this._call = call;
  }
}

export class MultiBatchTransferFromCall extends ethereum.Call {
  get inputs(): MultiBatchTransferFromCall__Inputs {
    return new MultiBatchTransferFromCall__Inputs(this);
  }

  get outputs(): MultiBatchTransferFromCall__Outputs {
    return new MultiBatchTransferFromCall__Outputs(this);
  }
}

export class MultiBatchTransferFromCall__Inputs {
  _call: MultiBatchTransferFromCall;

  constructor(call: MultiBatchTransferFromCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _fromB(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _toB(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class MultiBatchTransferFromCall__Outputs {
  _call: MultiBatchTransferFromCall;

  constructor(call: MultiBatchTransferFromCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class GiftAssetCall extends ethereum.Call {
  get inputs(): GiftAssetCall__Inputs {
    return new GiftAssetCall__Inputs(this);
  }

  get outputs(): GiftAssetCall__Outputs {
    return new GiftAssetCall__Outputs(this);
  }
}

export class GiftAssetCall__Inputs {
  _call: GiftAssetCall;

  constructor(call: GiftAssetCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class GiftAssetCall__Outputs {
  _call: GiftAssetCall;

  constructor(call: GiftAssetCall) {
    this._call = call;
  }
}

export class SetSaleManagerAddressCall extends ethereum.Call {
  get inputs(): SetSaleManagerAddressCall__Inputs {
    return new SetSaleManagerAddressCall__Inputs(this);
  }

  get outputs(): SetSaleManagerAddressCall__Outputs {
    return new SetSaleManagerAddressCall__Outputs(this);
  }
}

export class SetSaleManagerAddressCall__Inputs {
  _call: SetSaleManagerAddressCall;

  constructor(call: SetSaleManagerAddressCall) {
    this._call = call;
  }

  get _saleManagerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSaleManagerAddressCall__Outputs {
  _call: SetSaleManagerAddressCall;

  constructor(call: SetSaleManagerAddressCall) {
    this._call = call;
  }
}

export class UpdateBatchSupportCall extends ethereum.Call {
  get inputs(): UpdateBatchSupportCall__Inputs {
    return new UpdateBatchSupportCall__Inputs(this);
  }

  get outputs(): UpdateBatchSupportCall__Outputs {
    return new UpdateBatchSupportCall__Outputs(this);
  }
}

export class UpdateBatchSupportCall__Inputs {
  _call: UpdateBatchSupportCall;

  constructor(call: UpdateBatchSupportCall) {
    this._call = call;
  }

  get _flag(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class UpdateBatchSupportCall__Outputs {
  _call: UpdateBatchSupportCall;

  constructor(call: UpdateBatchSupportCall) {
    this._call = call;
  }
}

export class BatchApproveCall extends ethereum.Call {
  get inputs(): BatchApproveCall__Inputs {
    return new BatchApproveCall__Inputs(this);
  }

  get outputs(): BatchApproveCall__Outputs {
    return new BatchApproveCall__Outputs(this);
  }
}

export class BatchApproveCall__Inputs {
  _call: BatchApproveCall;

  constructor(call: BatchApproveCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class BatchApproveCall__Outputs {
  _call: BatchApproveCall;

  constructor(call: BatchApproveCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class CreateRewardCollectibleCall extends ethereum.Call {
  get inputs(): CreateRewardCollectibleCall__Inputs {
    return new CreateRewardCollectibleCall__Inputs(this);
  }

  get outputs(): CreateRewardCollectibleCall__Outputs {
    return new CreateRewardCollectibleCall__Outputs(this);
  }
}

export class CreateRewardCollectibleCall__Inputs {
  _call: CreateRewardCollectibleCall;

  constructor(call: CreateRewardCollectibleCall) {
    this._call = call;
  }

  get _teamId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _posId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _attributes(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _gameId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _playerOverrideId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _mlbPlayerId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateRewardCollectibleCall__Outputs {
  _call: CreateRewardCollectibleCall;

  constructor(call: CreateRewardCollectibleCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class CreateSeedCollectibleCall extends ethereum.Call {
  get inputs(): CreateSeedCollectibleCall__Inputs {
    return new CreateSeedCollectibleCall__Inputs(this);
  }

  get outputs(): CreateSeedCollectibleCall__Outputs {
    return new CreateSeedCollectibleCall__Outputs(this);
  }
}

export class CreateSeedCollectibleCall__Inputs {
  _call: CreateSeedCollectibleCall;

  constructor(call: CreateSeedCollectibleCall) {
    this._call = call;
  }

  get _teamId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _posId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _attributes(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _gameId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _playerOverrideId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _mlbPlayerId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateSeedCollectibleCall__Outputs {
  _call: CreateSeedCollectibleCall;

  constructor(call: CreateSeedCollectibleCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveFromApproveListCall extends ethereum.Call {
  get inputs(): RemoveFromApproveListCall__Inputs {
    return new RemoveFromApproveListCall__Inputs(this);
  }

  get outputs(): RemoveFromApproveListCall__Outputs {
    return new RemoveFromApproveListCall__Outputs(this);
  }
}

export class RemoveFromApproveListCall__Inputs {
  _call: RemoveFromApproveListCall;

  constructor(call: RemoveFromApproveListCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveFromApproveListCall__Outputs {
  _call: RemoveFromApproveListCall;

  constructor(call: RemoveFromApproveListCall) {
    this._call = call;
  }
}

export class SetDetachmentTimeCall extends ethereum.Call {
  get inputs(): SetDetachmentTimeCall__Inputs {
    return new SetDetachmentTimeCall__Inputs(this);
  }

  get outputs(): SetDetachmentTimeCall__Outputs {
    return new SetDetachmentTimeCall__Outputs(this);
  }
}

export class SetDetachmentTimeCall__Inputs {
  _call: SetDetachmentTimeCall;

  constructor(call: SetDetachmentTimeCall) {
    this._call = call;
  }

  get _time(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDetachmentTimeCall__Outputs {
  _call: SetDetachmentTimeCall;

  constructor(call: SetDetachmentTimeCall) {
    this._call = call;
  }
}

export class UpdateCurrentGameCardIdCall extends ethereum.Call {
  get inputs(): UpdateCurrentGameCardIdCall__Inputs {
    return new UpdateCurrentGameCardIdCall__Inputs(this);
  }

  get outputs(): UpdateCurrentGameCardIdCall__Outputs {
    return new UpdateCurrentGameCardIdCall__Outputs(this);
  }
}

export class UpdateCurrentGameCardIdCall__Inputs {
  _call: UpdateCurrentGameCardIdCall;

  constructor(call: UpdateCurrentGameCardIdCall) {
    this._call = call;
  }

  get _gameCardNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _playerId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateCurrentGameCardIdCall__Outputs {
  _call: UpdateCurrentGameCardIdCall;

  constructor(call: UpdateCurrentGameCardIdCall) {
    this._call = call;
  }
}

export class BatchCreateETHCardAssetCall extends ethereum.Call {
  get inputs(): BatchCreateETHCardAssetCall__Inputs {
    return new BatchCreateETHCardAssetCall__Inputs(this);
  }

  get outputs(): BatchCreateETHCardAssetCall__Outputs {
    return new BatchCreateETHCardAssetCall__Outputs(this);
  }
}

export class BatchCreateETHCardAssetCall__Inputs {
  _call: BatchCreateETHCardAssetCall;

  constructor(call: BatchCreateETHCardAssetCall) {
    this._call = call;
  }

  get _teamId(): Array<i32> {
    return this._call.inputValues[0].value.toI32Array();
  }

  get _attributes(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _playerOverrideId(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _mlbPlayerId(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _to(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }
}

export class BatchCreateETHCardAssetCall__Outputs {
  _call: BatchCreateETHCardAssetCall;

  constructor(call: BatchCreateETHCardAssetCall) {
    this._call = call;
  }
}

export class BatchDetachAssetsCall extends ethereum.Call {
  get inputs(): BatchDetachAssetsCall__Inputs {
    return new BatchDetachAssetsCall__Inputs(this);
  }

  get outputs(): BatchDetachAssetsCall__Outputs {
    return new BatchDetachAssetsCall__Outputs(this);
  }
}

export class BatchDetachAssetsCall__Inputs {
  _call: BatchDetachAssetsCall;

  constructor(call: BatchDetachAssetsCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class BatchDetachAssetsCall__Outputs {
  _call: BatchDetachAssetsCall;

  constructor(call: BatchDetachAssetsCall) {
    this._call = call;
  }
}

export class SetNewAddressCall extends ethereum.Call {
  get inputs(): SetNewAddressCall__Inputs {
    return new SetNewAddressCall__Inputs(this);
  }

  get outputs(): SetNewAddressCall__Outputs {
    return new SetNewAddressCall__Outputs(this);
  }
}

export class SetNewAddressCall__Inputs {
  _call: SetNewAddressCall;

  constructor(call: SetNewAddressCall) {
    this._call = call;
  }

  get _v2Address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNewAddressCall__Outputs {
  _call: SetNewAddressCall;

  constructor(call: SetNewAddressCall) {
    this._call = call;
  }
}

export class UpdateEarnedByCall extends ethereum.Call {
  get inputs(): UpdateEarnedByCall__Inputs {
    return new UpdateEarnedByCall__Inputs(this);
  }

  get outputs(): UpdateEarnedByCall__Outputs {
    return new UpdateEarnedByCall__Outputs(this);
  }
}

export class UpdateEarnedByCall__Inputs {
  _call: UpdateEarnedByCall;

  constructor(call: UpdateEarnedByCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _earnedBy(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateEarnedByCall__Outputs {
  _call: UpdateEarnedByCall;

  constructor(call: UpdateEarnedByCall) {
    this._call = call;
  }
}

export class BatchCreateAssetSaleCall extends ethereum.Call {
  get inputs(): BatchCreateAssetSaleCall__Inputs {
    return new BatchCreateAssetSaleCall__Inputs(this);
  }

  get outputs(): BatchCreateAssetSaleCall__Outputs {
    return new BatchCreateAssetSaleCall__Outputs(this);
  }
}

export class BatchCreateAssetSaleCall__Inputs {
  _call: BatchCreateAssetSaleCall;

  constructor(call: BatchCreateAssetSaleCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _startingPrices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _endingPrices(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _durations(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class BatchCreateAssetSaleCall__Outputs {
  _call: BatchCreateAssetSaleCall;

  constructor(call: BatchCreateAssetSaleCall) {
    this._call = call;
  }
}

export class SetSecondaryManagerCall extends ethereum.Call {
  get inputs(): SetSecondaryManagerCall__Inputs {
    return new SetSecondaryManagerCall__Inputs(this);
  }

  get outputs(): SetSecondaryManagerCall__Outputs {
    return new SetSecondaryManagerCall__Outputs(this);
  }
}

export class SetSecondaryManagerCall__Inputs {
  _call: SetSecondaryManagerCall;

  constructor(call: SetSecondaryManagerCall) {
    this._call = call;
  }

  get _newGM(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSecondaryManagerCall__Outputs {
  _call: SetSecondaryManagerCall;

  constructor(call: SetSecondaryManagerCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveAllAttachmentsFromCollectibleCall extends ethereum.Call {
  get inputs(): RemoveAllAttachmentsFromCollectibleCall__Inputs {
    return new RemoveAllAttachmentsFromCollectibleCall__Inputs(this);
  }

  get outputs(): RemoveAllAttachmentsFromCollectibleCall__Outputs {
    return new RemoveAllAttachmentsFromCollectibleCall__Outputs(this);
  }
}

export class RemoveAllAttachmentsFromCollectibleCall__Inputs {
  _call: RemoveAllAttachmentsFromCollectibleCall;

  constructor(call: RemoveAllAttachmentsFromCollectibleCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveAllAttachmentsFromCollectibleCall__Outputs {
  _call: RemoveAllAttachmentsFromCollectibleCall;

  constructor(call: RemoveAllAttachmentsFromCollectibleCall) {
    this._call = call;
  }
}

export class BatchAttachAssetsCall extends ethereum.Call {
  get inputs(): BatchAttachAssetsCall__Inputs {
    return new BatchAttachAssetsCall__Inputs(this);
  }

  get outputs(): BatchAttachAssetsCall__Outputs {
    return new BatchAttachAssetsCall__Outputs(this);
  }
}

export class BatchAttachAssetsCall__Inputs {
  _call: BatchAttachAssetsCall;

  constructor(call: BatchAttachAssetsCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class BatchAttachAssetsCall__Outputs {
  _call: BatchAttachAssetsCall;

  constructor(call: BatchAttachAssetsCall) {
    this._call = call;
  }
}

export class NoErrorCall extends ethereum.Call {
  get inputs(): NoErrorCall__Inputs {
    return new NoErrorCall__Inputs(this);
  }

  get outputs(): NoErrorCall__Outputs {
    return new NoErrorCall__Outputs(this);
  }
}

export class NoErrorCall__Inputs {
  _call: NoErrorCall;

  constructor(call: NoErrorCall) {
    this._call = call;
  }
}

export class NoErrorCall__Outputs {
  _call: NoErrorCall;

  constructor(call: NoErrorCall) {
    this._call = call;
  }
}

export class UpdateGenerationDictCall extends ethereum.Call {
  get inputs(): UpdateGenerationDictCall__Inputs {
    return new UpdateGenerationDictCall__Inputs(this);
  }

  get outputs(): UpdateGenerationDictCall__Outputs {
    return new UpdateGenerationDictCall__Outputs(this);
  }
}

export class UpdateGenerationDictCall__Inputs {
  _call: UpdateGenerationDictCall;

  constructor(call: UpdateGenerationDictCall) {
    this._call = call;
  }

  get _season(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateGenerationDictCall__Outputs {
  _call: UpdateGenerationDictCall;

  constructor(call: UpdateGenerationDictCall) {
    this._call = call;
  }
}

export class BatchTransferFromCall extends ethereum.Call {
  get inputs(): BatchTransferFromCall__Inputs {
    return new BatchTransferFromCall__Inputs(this);
  }

  get outputs(): BatchTransferFromCall__Outputs {
    return new BatchTransferFromCall__Outputs(this);
  }
}

export class BatchTransferFromCall__Inputs {
  _call: BatchTransferFromCall;

  constructor(call: BatchTransferFromCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class BatchTransferFromCall__Outputs {
  _call: BatchTransferFromCall;

  constructor(call: BatchTransferFromCall) {
    this._call = call;
  }
}

export class BatchSafeTransferFromCall extends ethereum.Call {
  get inputs(): BatchSafeTransferFromCall__Inputs {
    return new BatchSafeTransferFromCall__Inputs(this);
  }

  get outputs(): BatchSafeTransferFromCall__Outputs {
    return new BatchSafeTransferFromCall__Outputs(this);
  }
}

export class BatchSafeTransferFromCall__Inputs {
  _call: BatchSafeTransferFromCall;

  constructor(call: BatchSafeTransferFromCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class BatchSafeTransferFromCall__Outputs {
  _call: BatchSafeTransferFromCall;

  constructor(call: BatchSafeTransferFromCall) {
    this._call = call;
  }
}

export class AddAttachmentToCollectibleCall extends ethereum.Call {
  get inputs(): AddAttachmentToCollectibleCall__Inputs {
    return new AddAttachmentToCollectibleCall__Inputs(this);
  }

  get outputs(): AddAttachmentToCollectibleCall__Outputs {
    return new AddAttachmentToCollectibleCall__Outputs(this);
  }
}

export class AddAttachmentToCollectibleCall__Inputs {
  _call: AddAttachmentToCollectibleCall;

  constructor(call: AddAttachmentToCollectibleCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _attachment(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddAttachmentToCollectibleCall__Outputs {
  _call: AddAttachmentToCollectibleCall;

  constructor(call: AddAttachmentToCollectibleCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetBatchDetachCollectiblesCall extends ethereum.Call {
  get inputs(): SetBatchDetachCollectiblesCall__Inputs {
    return new SetBatchDetachCollectiblesCall__Inputs(this);
  }

  get outputs(): SetBatchDetachCollectiblesCall__Outputs {
    return new SetBatchDetachCollectiblesCall__Outputs(this);
  }
}

export class SetBatchDetachCollectiblesCall__Inputs {
  _call: SetBatchDetachCollectiblesCall;

  constructor(call: SetBatchDetachCollectiblesCall) {
    this._call = call;
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetBatchDetachCollectiblesCall__Outputs {
  _call: SetBatchDetachCollectiblesCall;

  constructor(call: SetBatchDetachCollectiblesCall) {
    this._call = call;
  }
}

export class HasErrorCall extends ethereum.Call {
  get inputs(): HasErrorCall__Inputs {
    return new HasErrorCall__Inputs(this);
  }

  get outputs(): HasErrorCall__Outputs {
    return new HasErrorCall__Outputs(this);
  }
}

export class HasErrorCall__Inputs {
  _call: HasErrorCall;

  constructor(call: HasErrorCall) {
    this._call = call;
  }
}

export class HasErrorCall__Outputs {
  _call: HasErrorCall;

  constructor(call: HasErrorCall) {
    this._call = call;
  }
}

export class CreatePromoCollectibleCall extends ethereum.Call {
  get inputs(): CreatePromoCollectibleCall__Inputs {
    return new CreatePromoCollectibleCall__Inputs(this);
  }

  get outputs(): CreatePromoCollectibleCall__Outputs {
    return new CreatePromoCollectibleCall__Outputs(this);
  }
}

export class CreatePromoCollectibleCall__Inputs {
  _call: CreatePromoCollectibleCall;

  constructor(call: CreatePromoCollectibleCall) {
    this._call = call;
  }

  get _teamId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _posId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _attributes(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _gameId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _playerOverrideId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _mlbPlayerId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreatePromoCollectibleCall__Outputs {
  _call: CreatePromoCollectibleCall;

  constructor(call: CreatePromoCollectibleCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class InitiateCreateSaleCall extends ethereum.Call {
  get inputs(): InitiateCreateSaleCall__Inputs {
    return new InitiateCreateSaleCall__Inputs(this);
  }

  get outputs(): InitiateCreateSaleCall__Outputs {
    return new InitiateCreateSaleCall__Outputs(this);
  }
}

export class InitiateCreateSaleCall__Inputs {
  _call: InitiateCreateSaleCall;

  constructor(call: InitiateCreateSaleCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endingPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitiateCreateSaleCall__Outputs {
  _call: InitiateCreateSaleCall;

  constructor(call: InitiateCreateSaleCall) {
    this._call = call;
  }
}

export class SetOtherManagerCall extends ethereum.Call {
  get inputs(): SetOtherManagerCall__Inputs {
    return new SetOtherManagerCall__Inputs(this);
  }

  get outputs(): SetOtherManagerCall__Outputs {
    return new SetOtherManagerCall__Outputs(this);
  }
}

export class SetOtherManagerCall__Inputs {
  _call: SetOtherManagerCall;

  constructor(call: SetOtherManagerCall) {
    this._call = call;
  }

  get _newOp(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _state(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetOtherManagerCall__Outputs {
  _call: SetOtherManagerCall;

  constructor(call: SetOtherManagerCall) {
    this._call = call;
  }
}

export class SetPrimaryManagerCall extends ethereum.Call {
  get inputs(): SetPrimaryManagerCall__Inputs {
    return new SetPrimaryManagerCall__Inputs(this);
  }

  get outputs(): SetPrimaryManagerCall__Outputs {
    return new SetPrimaryManagerCall__Outputs(this);
  }
}

export class SetPrimaryManagerCall__Inputs {
  _call: SetPrimaryManagerCall;

  constructor(call: SetPrimaryManagerCall) {
    this._call = call;
  }

  get _newGM(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPrimaryManagerCall__Outputs {
  _call: SetPrimaryManagerCall;

  constructor(call: SetPrimaryManagerCall) {
    this._call = call;
  }
}

export class AttachAssetCall extends ethereum.Call {
  get inputs(): AttachAssetCall__Inputs {
    return new AttachAssetCall__Inputs(this);
  }

  get outputs(): AttachAssetCall__Outputs {
    return new AttachAssetCall__Outputs(this);
  }
}

export class AttachAssetCall__Inputs {
  _call: AttachAssetCall;

  constructor(call: AttachAssetCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AttachAssetCall__Outputs {
  _call: AttachAssetCall;

  constructor(call: AttachAssetCall) {
    this._call = call;
  }
}

export class ToggleAttachedEnforcementCall extends ethereum.Call {
  get inputs(): ToggleAttachedEnforcementCall__Inputs {
    return new ToggleAttachedEnforcementCall__Inputs(this);
  }

  get outputs(): ToggleAttachedEnforcementCall__Outputs {
    return new ToggleAttachedEnforcementCall__Outputs(this);
  }
}

export class ToggleAttachedEnforcementCall__Inputs {
  _call: ToggleAttachedEnforcementCall;

  constructor(call: ToggleAttachedEnforcementCall) {
    this._call = call;
  }

  get _state(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ToggleAttachedEnforcementCall__Outputs {
  _call: ToggleAttachedEnforcementCall;

  constructor(call: ToggleAttachedEnforcementCall) {
    this._call = call;
  }
}

export class AddToApproveListCall extends ethereum.Call {
  get inputs(): AddToApproveListCall__Inputs {
    return new AddToApproveListCall__Inputs(this);
  }

  get outputs(): AddToApproveListCall__Outputs {
    return new AddToApproveListCall__Outputs(this);
  }
}

export class AddToApproveListCall__Inputs {
  _call: AddToApproveListCall;

  constructor(call: AddToApproveListCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddToApproveListCall__Outputs {
  _call: AddToApproveListCall;

  constructor(call: AddToApproveListCall) {
    this._call = call;
  }
}

export class SetGenerationSeasonControllerCall extends ethereum.Call {
  get inputs(): SetGenerationSeasonControllerCall__Inputs {
    return new SetGenerationSeasonControllerCall__Inputs(this);
  }

  get outputs(): SetGenerationSeasonControllerCall__Outputs {
    return new SetGenerationSeasonControllerCall__Outputs(this);
  }
}

export class SetGenerationSeasonControllerCall__Inputs {
  _call: SetGenerationSeasonControllerCall;

  constructor(call: SetGenerationSeasonControllerCall) {
    this._call = call;
  }

  get _season(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGenerationSeasonControllerCall__Outputs {
  _call: SetGenerationSeasonControllerCall;

  constructor(call: SetGenerationSeasonControllerCall) {
    this._call = call;
  }
}

export class SetTokenURIBaseCall extends ethereum.Call {
  get inputs(): SetTokenURIBaseCall__Inputs {
    return new SetTokenURIBaseCall__Inputs(this);
  }

  get outputs(): SetTokenURIBaseCall__Outputs {
    return new SetTokenURIBaseCall__Outputs(this);
  }
}

export class SetTokenURIBaseCall__Inputs {
  _call: SetTokenURIBaseCall;

  constructor(call: SetTokenURIBaseCall) {
    this._call = call;
  }

  get _tokenURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetTokenURIBaseCall__Outputs {
  _call: SetTokenURIBaseCall;

  constructor(call: SetTokenURIBaseCall) {
    this._call = call;
  }
}

export class RequestDetachmentOnPauseCall extends ethereum.Call {
  get inputs(): RequestDetachmentOnPauseCall__Inputs {
    return new RequestDetachmentOnPauseCall__Inputs(this);
  }

  get outputs(): RequestDetachmentOnPauseCall__Outputs {
    return new RequestDetachmentOnPauseCall__Outputs(this);
  }
}

export class RequestDetachmentOnPauseCall__Inputs {
  _call: RequestDetachmentOnPauseCall;

  constructor(call: RequestDetachmentOnPauseCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestDetachmentOnPauseCall__Outputs {
  _call: RequestDetachmentOnPauseCall;

  constructor(call: RequestDetachmentOnPauseCall) {
    this._call = call;
  }
}

export class SetNFTDetachedCall extends ethereum.Call {
  get inputs(): SetNFTDetachedCall__Inputs {
    return new SetNFTDetachedCall__Inputs(this);
  }

  get outputs(): SetNFTDetachedCall__Outputs {
    return new SetNFTDetachedCall__Outputs(this);
  }
}

export class SetNFTDetachedCall__Inputs {
  _call: SetNFTDetachedCall;

  constructor(call: SetNFTDetachedCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetNFTDetachedCall__Outputs {
  _call: SetNFTDetachedCall;

  constructor(call: SetNFTDetachedCall) {
    this._call = call;
  }
}

export class UpdateGenerationStopTimeCall extends ethereum.Call {
  get inputs(): UpdateGenerationStopTimeCall__Inputs {
    return new UpdateGenerationStopTimeCall__Inputs(this);
  }

  get outputs(): UpdateGenerationStopTimeCall__Outputs {
    return new UpdateGenerationStopTimeCall__Outputs(this);
  }
}

export class UpdateGenerationStopTimeCall__Inputs {
  _call: UpdateGenerationStopTimeCall;

  constructor(call: UpdateGenerationStopTimeCall) {
    this._call = call;
  }

  get _season(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _value(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class UpdateGenerationStopTimeCall__Outputs {
  _call: UpdateGenerationStopTimeCall;

  constructor(call: UpdateGenerationStopTimeCall) {
    this._call = call;
  }
}

export class SetPlayerOverrideIdCall extends ethereum.Call {
  get inputs(): SetPlayerOverrideIdCall__Inputs {
    return new SetPlayerOverrideIdCall__Inputs(this);
  }

  get outputs(): SetPlayerOverrideIdCall__Outputs {
    return new SetPlayerOverrideIdCall__Outputs(this);
  }
}

export class SetPlayerOverrideIdCall__Inputs {
  _call: SetPlayerOverrideIdCall;

  constructor(call: SetPlayerOverrideIdCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newOverrideId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPlayerOverrideIdCall__Outputs {
  _call: SetPlayerOverrideIdCall;

  constructor(call: SetPlayerOverrideIdCall) {
    this._call = call;
  }
}

export class SetBankerCall extends ethereum.Call {
  get inputs(): SetBankerCall__Inputs {
    return new SetBankerCall__Inputs(this);
  }

  get outputs(): SetBankerCall__Outputs {
    return new SetBankerCall__Outputs(this);
  }
}

export class SetBankerCall__Inputs {
  _call: SetBankerCall;

  constructor(call: SetBankerCall) {
    this._call = call;
  }

  get _newBK(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBankerCall__Outputs {
  _call: SetBankerCall;

  constructor(call: SetBankerCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}
